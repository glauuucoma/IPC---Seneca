///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #7
Full Name  : Davyd Kuleba
Student ID#: 147894224

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1) Yes, I successfully completed assignment and created the best solution for the problem. To solve a problem I broke it down into smaller ones.

> Ruler: To create a ruler I need first to know how long should it be, ruler's length should be equal to the path length. I need to create a loop that will display numbers from 1-9, but if the number is multiple of 10 then it should display zero, if greater than zero that it should display result the reminder of "i" divided by 10. To achieve that I will create a loop that will set "i" as a counter. It will count from 1 to path length, and inside this loop, I have two if statements and one else. One checking if "i" is a multiple of ten, and if yes then the console prints "0", if not then it checks if "i" is greater than ten if yes it divides "i" by ten and prints reminder and else just prints "i".

> Board: I initialized char constants for each symbol that will appear on board. Then I created an array that equals to game path length and set all characters to '-' (undiscovered location). To print out board I used loop that iterated thru each element and printed it.

> Player position: To print position of player I used for loop that would print out certain number of spaces before down arrow, so arrow is pointing at the right number.

2) Structures improve readability, organization and reusability of program. Its convenient way to store values and accessing them. For example: If I would use external variables it would be easy to get lost in endless names and comments. I would need to comment each variable declarations. But with using structures I can secure values from accidental misuse or mutating.Because when I am typing "player.treasureCount" I can understand that it's user treasure score, and when I am typing "game.treasureCount" I understand that this value is responsible for number of treasures in the whole game.

3) Code:

-------------------------------------------------------------
int main(void){						    |
    do{          					    |
	if(playerMove != 0){				    |
		for (i = 0; i < playerMove-1; i++) {}	    |
	}						    |
    } while (movesRemaining > 0 && player.numOfLives > 0);  |
}							    |
-------------------------------------------------------------
